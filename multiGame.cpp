/*
 * multiGame.cpp
 *
 *  Created on: Aug 1, 2014
 *      Author: brandon
 */

#include <iostream>
#include <string>

#include "SwansonLibs/swansonUtils.hpp"

#include "SwansonObjects/ArgReader.hpp"
#include "SwansonObjects/menu.hpp"
#include "SwansonObjects/Dictionary.hpp"
#include "SwansonObjects/PreFabDictionary.hpp"

#include "NumberGuess.hpp"
#include "wordGuess.hpp"
#include "phraseGuess.hpp"


using namespace std;

//command line arguments
const string SIMPLE_MODE = "-s";

//Output Strings
const string INTRO = "Welcome to the Game Console";
const string AGAIN = "Would you like to play again";

//global variables
NumberGuess *myNumberGame;
WordGuess *myWordGame;
PhraseGuess *myPhraseGame;
bool ComputerGenerated = true;

//function prototypes
void PlayNumberGuess();
void PlayWordGuess();
void PlayPhraseGuess();

int main( int argc , char* argv[] ){

   const int MAX_WORD_LENGTH = 7;
   void (*clearScreen)() = swansonUtil::ClearScreen;
   Menu myMenu(INTRO);

   ///process command line arguments//////////////
   //args passed to ARGinAttor
   ARGinAttor myARGinAttor( argc , argv);
   //check Arginators arguement set<string> for -s SIMPLE MODE
   if(myARGinAttor.ArgumentPassedIn(SIMPLE_MODE)){
      clearScreen=swansonUtil::HackClearScreen;
      myMenu.setClear(clearScreen);
   }

   swansonUtil::SeedRandom();

   //instance a dictionary
   Dictionary myDict(MAX_WORD_LENGTH);
   if ( !myDict.Filled() )
      myDict = PreFabDict::UsePreFabDict();

   //instance 3 games
   myNumberGame = new NumberGuess(50);
   myWordGame = new WordGuess(myDict);
   myPhraseGame = new PhraseGuess(myDict);


   ///filling menu
   myMenu.addItem(new GoItem( PlayNumberGuess,"NumberGuess","",AGAIN));
   myMenu.addItem(new GoItem( PlayWordGuess,"Word Guess","",AGAIN));
   myMenu.addItem(new GoItem( PlayPhraseGuess,"Phrase Guess","",AGAIN));
   myMenu.addItem(new BoolItem(ComputerGenerated, "Secret is generated by",
         "Computer","Human"));

   myMenu.showMenu();


}

//function definitions
void PlayNumberGuess(){
   myNumberGame->SetComputerGeneratedSecret(ComputerGenerated);
   myNumberGame->PlayGame();
}
void PlayWordGuess(){
   myWordGame->SetComputerGeneratedSecret(ComputerGenerated);
   myWordGame->PlayGame();
}
void PlayPhraseGuess(){
   myPhraseGame->SetComputerGeneratedSecret(ComputerGenerated);
   myPhraseGame->PlayGame();
}


